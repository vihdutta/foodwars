name: Build, Push, Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build & Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/foodwars-app:latest

  deploy:
    name: Deploy to AWS Lightsail
    runs-on: ubuntu-latest
    environment: production
    needs: build-and-push

    steps:
      - name: Deploy via SSH to Lightsail
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ vars.LIGHTSAIL_PUBLIC_IP }}
          username: ${{ vars.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          port: 22
          script: |
            #!/usr/bin/env bash
            set -euo pipefail

            DOMAIN_NAME="${{ vars.DOMAIN_NAME }}"

            # Write reverse-proxy config
            sudo tee /etc/nginx/conf.d/${DOMAIN_NAME}.conf > /dev/null << EOF
            server {
                listen       80;
                server_name  ${DOMAIN_NAME} www.${DOMAIN_NAME};

                location = /healthz {
                  return 200 'OK';
                  add_header Content-Type "text/plain";
                }

                location / {
                    proxy_pass         http://127.0.0.1:8080;
                    proxy_http_version 1.1;
                    proxy_set_header   Upgrade \$http_upgrade;
                    proxy_set_header   Connection 'upgrade';
                    proxy_set_header   Host \$host;
                    proxy_set_header   X-Real-IP \$remote_addr;
                    proxy_set_header   X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_cache_bypass \$http_upgrade;
                }
            }
            EOF

            # stop and delete container
            sudo docker stop foodwars-app || true
            sudo docker rm foodwars-app || true
            sudo docker rmi ${{ vars.DOCKERHUB_USERNAME }}/foodwars-app:latest

            # reload nginx
            sudo nginx -t
            sudo systemctl reload nginx

            # pull and run new container
            sudo docker pull ${{ vars.DOCKERHUB_USERNAME }}/foodwars-app:latest
            sudo docker run -d \
              --name foodwars-app \
              -p 127.0.0.1:8080:8080 \
              ${{ vars.DOCKERHUB_USERNAME }}/foodwars-app:latest
