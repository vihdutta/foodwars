# vars
# DOCKERHUB_USERNAME
# DOMAIN_NAME
# LIGHTSAIL_PUBLIC_IP
# LIGHTSAIL_USERNAME

# secrets
# DOCKERHUB_ACCESS_TOKEN
# LIGHTSAIL_SSH_KEY (private ssh key)

name: Build & Deploy to Lightsail

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # check out
      - name: Checkout code
        uses: actions/checkout@v3

      # log in and push to docker hub to prepare image for deployment
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/foodwars-app:latest

      # SSH into Lightsail, install/configure Nginx on Amazon Linux, deploy container
      - name: Deploy to Lightsail
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ vars.LIGHTSAIL_PUBLIC_IP }}
          username: ${{ vars.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          port: 22
          script: |
            #!/usr/bin/env bash
            set -euo pipefail

            DOMAIN_NAME="${{ vars.DOMAIN_NAME }}"

            # write reverse-proxy config named after your domain
            sudo tee /etc/nginx/conf.d/${DOMAIN_NAME}.conf > /dev/null << 'EOF'
            server {
                listen       80;
                server_name  ${DOMAIN_NAME} www.${DOMAIN_NAME};

                # health-check endpoint
                location = /healthz {
                  return 200 'OK';
                  add_header Content-Type text/plain;
                }

                # proxy all other traffic to the node app
                location / {
                    proxy_pass         http://127.0.0.1:8080;
                    proxy_http_version 1.1;
                    proxy_set_header   Upgrade $http_upgrade;
                    proxy_set_header   Connection 'upgrade';
                    proxy_set_header   Host $host;
                    proxy_set_header   X-Real-IP $remote_addr;
                    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_cache_bypass $http_upgrade;
                }
            }
            EOF

            # test and reload nginx
            sudo nginx -t
            sudo systemctl reload nginx

            # if existing container, stop and remove it
            docker stop foodwars-app || true
            docker rm   foodwars-app || true

            # pull and deploy the new image, binding to localhost
            docker pull ${{ vars.DOCKERHUB_USERNAME }}/foodwars-app:latest
            docker run -d \
              --name foodwars-app \
              -p 127.0.0.1:8080:8080 \
              ${{ vars.DOCKERHUB_USERNAME }}/foodwars-app:latest
